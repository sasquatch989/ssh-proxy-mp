#!/usr/bin/python
import re
import subprocess

dhcpd_leases="dhcpd.leases"
keys = {'ip','hw','hn'}

"""
dhcpd_table={
    1:{'ip':'str','hw':'str','hn':'str'},
    2:{'ip':'str','hw':'str','hn':'str'}
     }
"""

dhcpd_table={0: {'ip':'IP Address','hw':'MAC Address','hn':'Hostname'}}
lease_ip=re.compile(r"lease (.*) {")
lease_hw=re.compile(r"\s+hardware ethernet (.*);")
lease_hn=re.compile(r"\s+client-hostname (.*);")
dhcpd_hash=[]


def get_key_id():
    return len(dhcpd_table.keys())
def dupe_check(line, key_id):
    '''Checking if any dict's exist for this IP, skip if true, else add this new dict and move on to the next line'''

    if hash(lease_ip.match(line).group(1)) in dhcpd_hash:
        return
    else:
        dhcpd_table[key_id] = dict.fromkeys(keys)
        dhcpd_table[key_id]['ip'] = lease_ip.match(line).group(1)
        dhcpd_hash.append(hash(lease_ip.match(line).group(1)))
        return

def check_for_none(hwaddr):
    return subprocess.check_output(['sudo', '/usr/bin/nodediscover', 'list', '-c', '-e', hwaddr]).split(',')[11]

def refresh_list():
    subprocess.call(['sudo', '/usr/bin/nodediscover', 'rescan', '>',  '/dev/null'])

def read_in():
    with open(dhcpd_leases,'r') as file:
        data = file.readlines()
        for line in data:
            while lease_ip.match(line):
                key_id = get_key_id()
                dupe_check(line, key_id)
                break
            if 'hardware' in line:
                key_id = get_key_id()-1
                dhcpd_table[key_id]['hw'] = lease_hw.match(line).group(1)
 
            if 'hostname' in line:
                key_id = len(dhcpd_table.keys())-1
                dhcpd_table[key_id]['hn'] = lease_hn.match(line).group(1)
            

def main():
    #refresh_list()
    read_in()
    for j in range(0,get_key_id()):
        if dhcpd_table[j]['hn'] == None:
            #dhcpd_table[j]['hn'] = check_for_none(dhcpd_table[j]['hw'])
            dhcpd_table[j]['hn'] = 'Unknown'
        print('{0:<20} {1:30} {2:60}'.format(dhcpd_table[j]['ip'], dhcpd_table[j]['hw'], dhcpd_table[j]['hn']))

main()
